From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Sun, 28 Jul 2024 14:16:29 +0800
Subject: [PATCH] =?UTF-8?q?OC:=20=E6=95=B4=E7=90=86Fonts=E7=B1=BB?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

更好的字体包支持
---
 core/src/mindustry/ClientLauncher.java |  6 ++----
 core/src/mindustry/core/UI.java        |  4 ----
 core/src/mindustry/ui/Fonts.java       | 30 ++++++++++++++------------
 3 files changed, 18 insertions(+), 22 deletions(-)

diff --git a/core/src/mindustry/ClientLauncher.java b/core/src/mindustry/ClientLauncher.java
index 6b69c2d175dd47163842f15d1e8148751d4f78e5..bedb08d781b3fd0bc0fcf407158e216317f69595 100644
--- a/core/src/mindustry/ClientLauncher.java
+++ b/core/src/mindustry/ClientLauncher.java
@@ -156,10 +156,8 @@ public abstract class ClientLauncher extends ApplicationCore implements Platform
 
         assets.load(new Vars());
 
-        Fonts.loadDefaultFont();
-
         //load fallback atlas if max texture size is below 4096
-        assets.load(new AssetDescriptor<>(maxTextureSize >= 4096 ? "sprites/sprites.aatls" : "sprites/fallback/sprites.aatls", TextureAtlas.class)).loaded = t -> atlas = t;
+        assets.load(maxTextureSize >= 4096 ? "sprites/sprites.aatls" : "sprites/fallback/sprites.aatls", TextureAtlas.class).loaded = t -> atlas = t;
         assets.loadRun("maps", Map.class, () -> maps.loadPreviews());
 
         Musics.load();
@@ -174,11 +172,11 @@ public abstract class ClientLauncher extends ApplicationCore implements Platform
         });
 
         assets.load(mods);
-        assets.loadRun("mergeUI", PixmapPacker.class, () -> {}, () -> Fonts.mergeFontAtlas(atlas));
 
         add(logic = new Logic());
         add(control = new Control());
         add(renderer = new Renderer());
+        Fonts.loadFonts();
         add(ui = new UI());
         add(netServer = new NetServer());
         add(netClient = new NetClient());
diff --git a/core/src/mindustry/core/UI.java b/core/src/mindustry/core/UI.java
index 5b0ee5946cb022e256aff23f2f1bfc71ab1d9abb..b3683879a2b1ddec68ec18bfdd1b7179a7bf1b05 100644
--- a/core/src/mindustry/core/UI.java
+++ b/core/src/mindustry/core/UI.java
@@ -84,10 +84,6 @@ public class UI implements ApplicationListener, Loadable{
 
     private @Nullable Element lastAnnouncement;
 
-    public UI(){
-        Fonts.loadFonts();
-    }
-
     public static void loadColors(){
         Colors.put("accent", Pal.accent);
         Colors.put("unlaunched", Color.valueOf("8982ed"));
diff --git a/core/src/mindustry/ui/Fonts.java b/core/src/mindustry/ui/Fonts.java
index ef68462bf6212b7caf5010ccdcac3c8fda601246..b0187a93a5daee8575ad5fd825b724fd64490669 100644
--- a/core/src/mindustry/ui/Fonts.java
+++ b/core/src/mindustry/ui/Fonts.java
@@ -61,11 +61,25 @@ public class Fonts{
     }
 
     public static void loadFonts(){
+        loadDefaultFont();
         largeIcons.clear();
         FreeTypeFontParameter param = fontParameter();
 
         Core.assets.load("default", Font.class, new FreeTypeFontLoaderParameter(mainFont, param)).loaded = f -> Fonts.def = f;
 
+        Core.assets.load("outline", Font.class, new FreeTypeFontLoaderParameter(mainFont, new FreeTypeFontParameter(){{
+            borderColor = Color.darkGray;
+            incremental = true;
+            size = 18;
+        }})).loaded = t -> Fonts.outline = t;
+
+        Core.assets.load("tech", Font.class, new FreeTypeFontLoaderParameter("fonts/tech.ttf", new FreeTypeFontParameter(){{
+            size = 18;
+        }})).loaded = f -> {
+            Fonts.tech = f;
+            Fonts.tech.getData().down *= 1.5f;
+        };
+
         Core.assets.load("icon", Font.class, new FreeTypeFontLoaderParameter("fonts/icon.ttf", new FreeTypeFontParameter(){{
             size = 30;
             incremental = true;
@@ -87,6 +101,8 @@ public class Fonts{
             //ASCII only
             characters = "\0ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890\"!`?'.,;:()[]{}<>|/@\\^$€-%+=#_&~*";
         }})).loaded = f -> Fonts.logic = f;
+
+        Core.assets.loadRun("mergeUI", PixmapPacker.class, () -> {}, () -> Fonts.mergeFontAtlas(Core.atlas));
     }
 
     public static @Nullable String unicodeToName(int unicode){
@@ -233,20 +249,6 @@ public class Fonts{
             }
         });
 
-        FreeTypeFontParameter param = new FreeTypeFontParameter(){{
-            borderColor = Color.darkGray;
-            incremental = true;
-            size = 18;
-        }};
-
-        Core.assets.load("outline", Font.class, new FreeTypeFontLoaderParameter(mainFont, param)).loaded = t -> Fonts.outline = t;
-
-        Core.assets.load("tech", Font.class, new FreeTypeFontLoaderParameter("fonts/tech.ttf", new FreeTypeFontParameter(){{
-            size = 18;
-        }})).loaded = f -> {
-            Fonts.tech = f;
-            Fonts.tech.getData().down *= 1.5f;
-        };
     }
 
     /** Merges the UI and font atlas together for better performance. */
