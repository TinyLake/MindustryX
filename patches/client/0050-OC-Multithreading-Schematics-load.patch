From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Thu, 25 Jul 2024 13:12:37 +0800
Subject: [PATCH] OC: Multithreading Schematics load

Inspired by FOO client.
---
 core/src/mindustry/game/Schematics.java | 25 +++++++++++++++++++------
 1 file changed, 19 insertions(+), 6 deletions(-)

diff --git a/core/src/mindustry/game/Schematics.java b/core/src/mindustry/game/Schematics.java
index 82c93e03c4fc28e4ed8a150f460042b22bd7b4cc..4382301e5160e1c5b452e21dd16401a223981aee 100644
--- a/core/src/mindustry/game/Schematics.java
+++ b/core/src/mindustry/game/Schematics.java
@@ -38,6 +38,7 @@ import mindustry.world.meta.*;
 import mindustryX.features.*;
 
 import java.io.*;
+import java.util.concurrent.*;
 import java.util.zip.*;
 
 import static mindustry.Vars.*;
@@ -81,22 +82,36 @@ public class Schematics implements Loadable{
 
         loadLoadouts();
 
+        //MDTX: multithreading schematics load, inspired by FOO
+        var await = new Seq<Future<Schematic>>();
         schematicDirectory.walk(file -> {
             if(file.extEquals(schematicExtension)){
-                loadFile(file);
+                await.add(mainExecutor.submit(() -> loadFile(file)));
             }
         });
 
-        platform.getWorkshopContent(Schematic.class).each(this::loadFile);
+        platform.getWorkshopContent(Schematic.class).each(file -> await.add(mainExecutor.submit(() -> loadFile(file))));
 
         //mod-specific schematics, cannot be removed
-        mods.listFiles("schematics", (mod, file) -> {
+        mods.listFiles("schematics", (mod, file) -> await.add(mainExecutor.submit(() -> {
             Schematic s = loadFile(file);
             if(s != null){
                 s.mod = mod;
             }
-        });
+            return s;
+        })));
 
+        await.each((task) -> {
+            try{
+                Schematic s = task.get();
+                if(s == null) return;
+                all.add(s);
+                checkLoadout(s, true);
+            }catch(Exception e){
+                throw new RuntimeException(e);
+            }
+        });
+        await.each(Threads::await);
         all.sort();
 
         if(shadowBuffer == null && !headless){
@@ -141,8 +156,6 @@ public class Schematics implements Loadable{
 
         try{
             Schematic s = read(file);
-            all.add(s);
-            checkLoadout(s, true);
 
             //external file from workshop
             if(!s.file.parent().equals(schematicDirectory)){
