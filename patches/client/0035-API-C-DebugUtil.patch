From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Sat, 20 Apr 2024 20:56:38 +0800
Subject: [PATCH] API&C: DebugUtil
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

更多统计信息
way-zer <himc.wicp@gmail.com> on 2024/7/21
---
 core/src/mindustry/ClientLauncher.java           | 2 +-
 core/src/mindustry/core/Logic.java               | 3 +++
 core/src/mindustry/ui/fragments/HudFragment.java | 7 +++++++
 3 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/core/src/mindustry/ClientLauncher.java b/core/src/mindustry/ClientLauncher.java
index bb7e299b171161d1416d27e724a40968961725f9..227495e812499ffaae06c12f6fe235b68feab488 100644
--- a/core/src/mindustry/ClientLauncher.java
+++ b/core/src/mindustry/ClientLauncher.java
@@ -73,7 +73,7 @@ public abstract class ClientLauncher extends ApplicationCore implements Platform
             return (Float.isNaN(result) || Float.isInfinite(result)) ? 1f : Mathf.clamp(result, 0.0001f, 60f / 10f);
         });
 
-        batch = new SortedSpriteBatch();
+        batch = new MySpriteBatch();
         assets = new AssetManager();
         assets.setLoader(Texture.class, "." + mapExtension, new MapPreviewLoader());
 
diff --git a/core/src/mindustry/core/Logic.java b/core/src/mindustry/core/Logic.java
index e722afb8f1d368d3068d9d8510f9fdda2ac27844..489ff2990d9b6c2bac49b4eb574266e369caf027 100644
--- a/core/src/mindustry/core/Logic.java
+++ b/core/src/mindustry/core/Logic.java
@@ -16,6 +16,7 @@ import mindustry.type.*;
 import mindustry.type.Weather.*;
 import mindustry.world.*;
 import mindustry.world.blocks.storage.CoreBlock.*;
+import mindustryX.features.*;
 
 import java.util.*;
 
@@ -403,6 +404,7 @@ public class Logic implements ApplicationListener{
 
     @Override
     public void update(){
+        var start = Time.nanos();
         Events.fire(Trigger.update);
         universe.updateGlobal();
 
@@ -489,6 +491,7 @@ public class Logic implements ApplicationListener{
         }else if(netServer.isWaitingForPlayers() && runStateCheck){
             checkGameState();
         }
+        DebugUtil.logicTime = Time.timeSinceNanos(start);
     }
 
     /** @return whether the wave timer is paused due to enemies */
diff --git a/core/src/mindustry/ui/fragments/HudFragment.java b/core/src/mindustry/ui/fragments/HudFragment.java
index e964aa5fdf02e5a606a6b3ca51babc5c03790799..9e26012834bf8d958d0a436616fb653256858f66 100644
--- a/core/src/mindustry/ui/fragments/HudFragment.java
+++ b/core/src/mindustry/ui/fragments/HudFragment.java
@@ -27,6 +27,7 @@ import mindustry.input.*;
 import mindustry.net.Packets.*;
 import mindustry.type.*;
 import mindustry.ui.*;
+import mindustryX.features.*;
 
 import static mindustry.Vars.*;
 import static mindustry.gen.Tex.*;
@@ -280,6 +281,12 @@ public class HudFragment{
 
                 info.label(() -> fps.get(Core.graphics.getFramesPerSecond())).left().style(Styles.outlineLabel).name("fps");
                 info.row();
+                info.label(() -> Strings.format("LG/DW/UI(ms) @/@/@", Time.nanosToMillis(DebugUtil.logicTime), Time.nanosToMillis(DebugUtil.rendererTime), Time.nanosToMillis(DebugUtil.uiTime)))
+                .left().style(Styles.outlineLabel).name("cpuTime");
+                info.row();
+                info.collapser(t-> t.label(() -> Strings.format("D/V/T/F @/@/@/@",
+                DebugUtil.lastDrawRequests, DebugUtil.lastVertices, DebugUtil.lastSwitchTexture, DebugUtil.lastFlushCount)).left().style(Styles.outlineLabel).name("draw"), ()->DebugUtil.renderDebug);
+                info.row();
 
                 if(android){
                     info.label(() -> memnative.get((int)(Core.app.getJavaHeap() / 1024 / 1024), (int)(Core.app.getNativeHeap() / 1024 / 1024))).left().style(Styles.outlineLabel).name("memory2");
