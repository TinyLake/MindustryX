From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: way-zer <himc.wicp@gmail.com>
Date: Thu, 25 Apr 2024 14:49:41 +0800
Subject: [PATCH] =?UTF-8?q?OC:=20=E4=BC=98=E5=8C=96Batch=E6=80=A7=E8=83=BD?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

大幅优化渲染性能
UPDATE1: 增加配置项，默认关闭
UPDATE2: 优化性能；我真的已经尽力了，剩下的只能怪java慢了
UPDATE3: 完全重写了sort，又提升了一倍sort性能
UPDATE4: 修复一些bug，并优化性能。这次重写了IntIntMap。(排序算法相当于完全重写完了)
UPDATE5: 修复文字渲染错误

sorted不写回，减少开销。
way-zer <himc.wicp@gmail.com> on 2024/5/28

新功能：顶点合并
way-zer <himc.wicp@gmail.com> on 2024/7/23

顶点合并等优化已合并到arc上游
way-zer <himc.wicp@gmail.com> on 2024/8/4
---
 core/src/mindustry/graphics/MultiPacker.java            | 2 +-
 core/src/mindustry/world/blocks/logic/LogicDisplay.java | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/core/src/mindustry/graphics/MultiPacker.java b/core/src/mindustry/graphics/MultiPacker.java
index 8d5fb2dd8d7148977ba2d98bb93658ec7a7ba44d..324bdce5bcc94d31e48a67eaddaf7bc7428478fe 100644
--- a/core/src/mindustry/graphics/MultiPacker.java
+++ b/core/src/mindustry/graphics/MultiPacker.java
@@ -110,7 +110,7 @@ public class MultiPacker implements Disposable{
     //editor page (sprites5.png) - all sprites needed for rendering in the editor, including block icons and a few minor sprites
     public enum PageType{
         //main page can be massive, but 8192 throws GL_OUT_OF_MEMORY on some GPUs and I can't deal with it yet.
-        main(4096),
+        main(16384, 4096), //MDTX 更大图集
 
         //TODO stuff like this throws OOM on some devices
         environment(4096, 2048),
diff --git a/core/src/mindustry/world/blocks/logic/LogicDisplay.java b/core/src/mindustry/world/blocks/logic/LogicDisplay.java
index 8d9665398a71d86da90f94a87e046a74d11a020a..0f0b5e2ab53f9c42f39960e0d81889527612b4e1 100644
--- a/core/src/mindustry/world/blocks/logic/LogicDisplay.java
+++ b/core/src/mindustry/world/blocks/logic/LogicDisplay.java
@@ -65,7 +65,7 @@ public class LogicDisplay extends Block{
             //don't even bother processing anything when displays are off.
             if(!Vars.renderer.drawDisplays) return;
 
-            Draw.draw(Draw.z(), () -> {
+            Draw.draw(Draw.z() - 0.001f, () -> {
                 if(buffer == null){
                     buffer = new FrameBuffer(displaySize, displaySize);
                     //clear the buffer - some OSs leave garbage in it
@@ -121,7 +121,7 @@ public class LogicDisplay extends Block{
             }
 
             Draw.blend(Blending.disabled);
-            Draw.draw(Draw.z(), () -> {
+            Draw.draw(Draw.z() + 0.001f, () -> {
                 if(buffer != null){
                     if(RenderExt.logicDisplayNoBorder){
                         Draw.rect(Draw.wrap(buffer.getTexture()), x, y, (buffer.getWidth() + 16) * Draw.scl, -(buffer.getHeight() + 16) * Draw.scl);
